------------------Estructura Inicial------------------------------------------------------

CREATE DATABASE gespro CHARACTER SET utf8 COLLATE utf8_general_ci;

------------------------------------------------------------------------
CREATE TABLE ubicacion (
  ID_UBICACION int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  CALLE varchar(100) ,
  NUM_INT varchar(30) ,
  NUM_EXT varchar(30) ,
  COLONIA varchar(100) ,
  CODIGO_POSTAL varchar(10) ,
  PAIS varchar(100) ,
  ESTADO varchar(100) ,
  MUNICIPIO varchar(100) 
);
------------------------------------------------------------------------
CREATE TABLE tipo_empresa (
  ID_TIPO_EMPRESA INT(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOMBRE VARCHAR(50) NOT NULL,
  DESCRIPCION VARCHAR(100)  
);

INSERT INTO tipo_empresa (ID_TIPO_EMPRESA, NOMBRE, DESCRIPCION) VALUES('1','FRANQUICIATARIO','FACTURE EN SEGUNDOS');
INSERT INTO tipo_empresa (ID_TIPO_EMPRESA, NOMBRE, DESCRIPCION) VALUES('2','FRANQUICIA','FANQUICIA');
INSERT INTO tipo_empresa (ID_TIPO_EMPRESA, NOMBRE, DESCRIPCION) VALUES('3','MATRIZ','MATRIZ DE UNA EMPMPRESA');
INSERT INTO tipo_empresa (ID_TIPO_EMPRESA, NOMBRE, DESCRIPCION) VALUES('4','SUCURSAL','SUCURSAL DE UNA EMPMPRESA');
------------------------------------------------------------------------
CREATE TABLE estatus (
  ID_ESTATUS INT(10) NOT NULL PRIMARY KEY,
  NOMBRE VARCHAR(100) ,
  DESCRIPCION VARCHAR(500)   
);

INSERT INTO estatus (ID_ESTATUS, NOMBRE, DESCRIPCION) VALUES('1','ACTIVO','EL ELEMENTO ESTA DISPONIBLE');
INSERT INTO estatus (ID_ESTATUS, NOMBRE, DESCRIPCION) VALUES('2','INACTIVO','EL ELEMENTO NO ESTA DISPONIBLE');

------------------------------------------------------------------------
CREATE TABLE empresa (
  ID_EMPRESA INT(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  ID_EMPRESA_PADRE INT(10) ,
  ID_UBICACION_FISCAL INT(10) NOT NULL,
  ID_TIPO_EMPRESA INT(10) NOT NULL,
  ID_ESTATUS INT(11) NOT NULL DEFAULT '1',  
  RFC VARCHAR(14),
  RAZON_SOCIAL VARCHAR(100) ,
  NOMBRE_COMERCIAL VARCHAR(100) ,
  REGIMEN_FISCAL VARCHAR(100) ,  
  COMPARTIR_CONCEPTOS_MATRIZ INT(1) DEFAULT '0',
  LATITUD DOUBLE DEFAULT '0',
  LONGITUD DOUBLE DEFAULT '0',   
  FECHA_REGISTRO DATE , 
  GIRO VARCHAR(100) DEFAULT '' COMMENT 'GIRO DE LA EMPRESA, A QUE SE DEDICA' ,
  FOREIGN KEY (ID_EMPRESA_PADRE) REFERENCES empresa (ID_EMPRESA),
  FOREIGN KEY (ID_UBICACION_FISCAL) REFERENCES ubicacion (ID_UBICACION),
  FOREIGN KEY (ID_TIPO_EMPRESA) REFERENCES tipo_empresa (ID_TIPO_EMPRESA),
  FOREIGN KEY (ID_ESTATUS) REFERENCES estatus (ID_ESTATUS)
);


------------------------------------------------------------------------

CREATE TABLE roles(
  ID_ROLES INT(10) NOT NULL PRIMARY KEY,
  NOMBRE VARCHAR(100),
  DESCRIPCION VARCHAR(500) ,
  ID_ESTATUS INT(5) NOT NULL DEFAULT '1',  
  ID_EMPRESA INT(11) NOT NULL,
  FOREIGN KEY (ID_ESTATUS) REFERENCES estatus (ID_ESTATUS)
);

INSERT INTO roles (ID_ROLES, NOMBRE, DESCRIPCION, ID_ESTATUS, ID_EMPRESA) VALUES(1,'DESARROLLADOR','USUARIO PARA DESARROLLO','1','0');
INSERT INTO roles (ID_ROLES, NOMBRE, DESCRIPCION, ID_ESTATUS, ID_EMPRESA) VALUES(2,'ADMINISTRADOR','CLIENTE DE PAGA','1','0');
INSERT INTO roles (ID_ROLES, NOMBRE, DESCRIPCION, ID_ESTATUS, ID_EMPRESA) VALUES(3,'DIRECTOR SUCURSAL','SOLO PUEDE VER LO DE SU SUCURSAL','1','0');
INSERT INTO roles (ID_ROLES, NOMBRE, DESCRIPCION, ID_ESTATUS, ID_EMPRESA) VALUES(4,'GESPRO','USUARIO FINAL MOVIL - DEMOEDECAN','1','0');

------------------------------------------------------------------------

CREATE TABLE dispositivo_movil (
  ID_DISPOSITIVO INT(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  ID_EMPRESA INT(10) NOT NULL,
  ID_ESTATUS INT(1) NOT NULL,
  IMEI VARCHAR(15) DEFAULT NULL,
  MARCA VARCHAR(100) DEFAULT NULL,
  MODELO VARCHAR(100) DEFAULT NULL,
  NUMERO_SERIE VARCHAR(100) DEFAULT NULL,  
  ALIAS_TELEFONO VARCHAR(150) DEFAULT '' COMMENT 'ATRIBUTO PARA COLOCAR EL ALIAS DEL CELULAR',
  REPORTE_ROBO INT(1) DEFAULT '0',
  FOREIGN KEY (ID_EMPRESA) REFERENCES empresa (ID_EMPRESA)
);

------------------------------------------------------------------------


CREATE TABLE datos_usuario (
  ID_DATOS_USUARIO int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOMBRE varchar(50) ,
  APELLIDO_PAT varchar(50) ,
  APELLIDO_MAT varchar(50) ,
  DIRECCION varchar(100) ,
  TELEFONO varchar(100) ,
  EXTENSION varchar(10) ,
  CELULAR varchar(20) ,
  CORREO varchar(100),
  NUM_EMPLEADO VARCHAR(50)
);


------------------------------------------------------------------------

CREATE TABLE ldap (
  ID_LDAP INT(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  USUARIO VARCHAR(100) ,
  PASSWORD VARCHAR(100) ,
  CONTRASENAS VARCHAR(100)   
);

------------------------------------------------------------------------

CREATE TABLE usuarios (
  ID_USUARIOS INT(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  ID_EMPRESA INT(10) NOT NULL,
  ID_DATOS_USUARIO INT(10) NOT NULL,
  ID_ESTATUS INT(10) NOT NULL,
  ID_ROLES INT(10) NOT NULL,
  ID_LDAP INT(10) NOT NULL,
  USER_NAME VARCHAR(100),
  FECHA_ALTA DATE ,
  FECHA_VIGENCIA DATE ,
  FECHA_ULTIMO_ACCESO TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  INTENTOS INT(2) DEFAULT '0',
  CONTRATO INT(2) DEFAULT '0',
  FECHA_CONTRATO DATE ,
  LOGIN TINYINT(1) DEFAULT '0', 
  LATITUD DOUBLE DEFAULT '0',
  LONGITUD DOUBLE DEFAULT '0',  
  ULTIMA_UBICACION DATETIME,
  ID_DISPOSITIVO INT(10),
  CLIENTES_CODIGO_BARRAS INT(1) DEFAULT '2' COMMENT 'PODRA BUSCAR A SUS CLIENTES, POR MEDIO DEL CODIGO DE BARRAS, 1 SI, 2 NO',  
  PERMISO_VENTA_CREDITO INT(11) DEFAULT '2' COMMENT 'CANDADO DE VENTA A CREDITO, PARA PERMITIR O NO HACER UNA VENTA A CREDITO POR DEFAULT ESTA DESACTIVADO EL PERMISO, 1 SI, 2 NO',
  TRABAJAR_FUERA_LINEA INT(1) DEFAULT '2' COMMENT 'EN EL MOVIL DEL EMPLEADO, EN ADMINISTRACION SE HABILITARA OPCION DE TRABAJAR FUERA DE LINEA, LA CUAL PERMITA AL EMPLEADO ELEGIR SI QUERE TRABAJAR SINCRONIZANDO EN LINEA SUS DATOS O NO, 1 SI, 2 NO',
  DISTANCIA_OBLIGATORIO DOUBLE DEFAULT '0' COMMENT 'DISTANCIA MINIMA, EN METROS, A LA QUE DEBERA DE ESTAR EL VENDEDOR PARA REGISTRAR UN MOVIMIENTO O VENTA A UN CLIENTE',
  PRECIO_DE_COMPRA INT(1) DEFAULT '2' COMMENT 'EN LOS REPORTES DE LOS VENDEDORES (DEL CELULAR) LES APARECERA ESTE PRECIO, 1 SI, 2 NO',
  PERMISO_ACCIONES_CLIENTE INT(11) DEFAULT '3',
  FOREIGN KEY (ID_EMPRESA) REFERENCES empresa (ID_EMPRESA),
  FOREIGN KEY (ID_ROLES) REFERENCES roles (ID_ROLES),
  FOREIGN KEY (ID_DATOS_USUARIO) REFERENCES datos_usuario (ID_DATOS_USUARIO),
  FOREIGN KEY (ID_ESTATUS) REFERENCES estatus (ID_ESTATUS),
  FOREIGN KEY (ID_LDAP) REFERENCES ldap (ID_LDAP)
);

------------------------------------------------------------------------

CREATE TABLE imagen_personal (
  ID_IMAGEN_PERSONAL INT(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  ID_EMPRESA INT(10) NOT NULL,
  NOMBRE_IMAGEN VARCHAR(200) ,
  UTILIZAR TINYINT(1) DEFAULT '0',
  FOREIGN KEY (ID_EMPRESA) REFERENCES empresa (ID_EMPRESA)
);

------------------------------------------------------------------------

CREATE TABLE empresa_permiso_aplicacion (
  ID_EMPRESA INT(11) NOT NULL PRIMARY KEY,
  ACCESO_GESPRO TINYINT(4) NOT NULL  DEFAULT '0' COMMENT 'Flag para indicar si la empresa, sucursales y usuarios tienen acceso al sistema GESPRO 0 sin Acceso al sistema, 1 Consola, 2 Moviles, 3 Consola y Moviles', 
  NUM_LICENCIAS INT(5) DEFAULT '0' COMMENT 'NUMERO DE LICENCIAS QUE PODRA TENER EL USUARIOS, LOS MOVILES DEBERAN ESTAR ACTIVOS', 
  ID_LICENCIA INT(11) DEFAULT '1' COMMENT 'ID DE TIPO LICENCIA DE LA EMPRESA MATRIZ DE ACUERDO A ESQUEMAS DE VENTAS '  
);

INSERT INTO empresa_permiso_aplicacion VALUES(1,3,100,1);


------------------------------------------------------------------------

CREATE TABLE cliente_categoria (
  ID_CATEGORIA INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  ID_EMPRESA INT(11) NOT NULL,
  ID_ESTATUS INT(1) DEFAULT '1' COMMENT '1 ACTIVO, 2 ELIMINADO/CANCELADO',
  NOMBRE_CLASIFICACION VARCHAR(50),
  DESCRIPCION VARCHAR(250),
  FOREIGN KEY (ID_EMPRESA) REFERENCES empresa (ID_EMPRESA)
);

------------------------------------------------------------------------

CREATE TABLE cliente (
  ID_CLIENTE INT(10) NOT NULL  PRIMARY KEY AUTO_INCREMENT,
  ID_EMPRESA INT(10) NOT NULL,
  ID_CATEGORIA INT(10) NOT NULL,
  ID_ESTATUS INT(10) ,
  NOMBRE_COMERCIAL VARCHAR(500) DEFAULT '' COMMENT 'CAMPO PARA GUARDAR EL NOMBRE COMERCIAL DEL CLIENTE',  
  CONTACTO VARCHAR(100) ,
  TELEFONO VARCHAR(20) ,
  CALLE VARCHAR(100) ,
  NUMERO VARCHAR(30) ,
  NUMERO_INTERIOR VARCHAR(30) ,
  COLONIA VARCHAR(100) ,
  CODIGO_POSTAL VARCHAR(10) ,
  PAIS VARCHAR(100) ,
  ESTADO VARCHAR(100) ,
  MUNICIPIO VARCHAR(100) , 
  CORREO VARCHAR(100) ,    
  LATITUD VARCHAR(200) ,
  LONGITUD VARCHAR(200) ,   
  FECHA_REGISTRO DATETIME  COMMENT 'FECHA DE REGISTRO DEL CLIENTE',
  ID_USUARIO_ALTA INT(11)  COMMENT 'ID USUARIO QUE REGISTRO AL CLIENTE -> USO EN MMETAS DE VENTA', 
  FOREIGN KEY (ID_EMPRESA) REFERENCES empresa (ID_EMPRESA), 
  FOREIGN KEY (ID_ESTATUS) REFERENCES estatus (ID_ESTATUS)
);


------------------------------------------------------------------------

CREATE TABLE relacion_cliente_vendedor (
  ID_CLIENTE INT(11) NOT NULL PRIMARY KEY COMMENT 'ID del cliente',
  ID_USUARIO INT(11) NOT NULL COMMENT 'ID del usuario al que pertenece el cliente',
  FOREIGN KEY (ID_USUARIO) REFERENCES usuarios (ID_USUARIOS)
);

------------------------------------------------------------------------

CREATE TABLE movil_mensaje (
  ID_MOVIL_MENSAJE INT(11) NOT NULL  PRIMARY KEY AUTO_INCREMENT,
  EMISOR_TIPO INT(1) NOT NULL COMMENT '1 - Empleado, 2- Consola (empresa)',
  ID_USUARIO_EMISOR INT(11)  COMMENT 'Solo en caso de que el tipo emisor sea 1, null en caso contrario',
  RECEPTOR_TIPO INT(1) NOT NULL COMMENT '1- Empleado, 2- Consola (empresa)',
  ID_USUARIO_RECEPTOR INT(11)  COMMENT 'Solo en caso de que el tipo de receptor sea 1, en caso contrario null',
  FECHA_EMISION DATETIME NOT NULL COMMENT 'Fecha y hora en la que se emite el mensaje',
  FECHA_RECEPCION DATETIME  COMMENT 'Fecha y hora en la que se entrega al receptor el mensaje',
  MENSAJE VARCHAR(160) NOT NULL COMMENT 'Mensaje a emitir',
  RECIBIDO INT(1) NOT NULL DEFAULT '0' COMMENT '0- No entregado, 1- Recibido'
);

------------------------------------------------------------------------

CREATE TABLE empleado_bitacora_posicion (
  ID_BITACORA_POSICION BIGINT(20) NOT NULL  PRIMARY KEY AUTO_INCREMENT,
  ID_USUARIO INT(11) NOT NULL,
  LATITUD DOUBLE NOT NULL DEFAULT '0',
  LONGITUD DOUBLE NOT NULL DEFAULT '0',
  FECHA DATETIME NOT NULL
);

------------------------------------------------------------------------
CREATE TABLE accion_bitacora_tipo (
  id_tipo INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  nombre_bitacora_accion_tipo VARCHAR(30) 
);


INSERT INTO accion_bitacora_tipo (id_tipo, nombre_bitacora_accion_tipo) VALUES('1','Login');
INSERT INTO accion_bitacora_tipo (id_tipo, nombre_bitacora_accion_tipo) VALUES('2','Logout');
INSERT INTO accion_bitacora_tipo (id_tipo, nombre_bitacora_accion_tipo) VALUES('3','Navegacion');
INSERT INTO accion_bitacora_tipo (id_tipo, nombre_bitacora_accion_tipo) VALUES('4','Descarga');

------------------------------------------------------------------------


CREATE TABLE topic (
  id_topic BIGINT(20) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  title_topic VARCHAR(100) NOT NULL,
  description_topic TEXT,
  order_topic VARCHAR(5) ,
  url_topic VARCHAR(200) NOT NULL,
  is_public_topic TINYINT(4) DEFAULT '0',
  id_parent_topic BIGINT(20) ,
  is_active_topic TINYINT(4) DEFAULT '1'
);
------------------------------------------------------------------------

CREATE TABLE accion_bitacora (
  id_bitacora_accion BIGINT(20) NOT NULL PRIMARY KEY AUTO_INCREMENT,
  fecha_hora_bitacora_accion DATETIME ,
  id_user INT NOT NULL,
  comentarios_bitacora_accion TEXT,
  id_tipo_bitacora_accion_tipo INT(11) NOT NULL,
  id_topic_navegacion BIGINT(20) DEFAULT '0', 
  FOREIGN KEY (id_user) REFERENCES usuarios (ID_USUARIOS),
  FOREIGN KEY (id_tipo_bitacora_accion_tipo) REFERENCES accion_bitacora_tipo (id_tipo)  
);

------------------------------------------------------------------------
-- Configuración Inical
INSERT INTO ubicacion VALUES (1,'GIRASOLES','23','4BIS','NIÑOS HEORES','20000','MÉXICO','DISTRITO FEDERAL','CUAHUTEMOC');
INSERT INTO empresa VALUES (1,1,1,1,1,NULL,'MOVILPYME','MOVILPYME','PERSONA MORAL',1,19.417869,-99.135046,'2015-10-15','SOFTWARE');
INSERT INTO datos_usuario VALUES (1,'MOVILPYME','MOVIL','PYME','MANZANAS 54 SAN JOSE DF','1234567890','123','5512345678','hsolares@movilpyme.com');
INSERT INTO ldap VALUES(1,'MOVILPYME','ArNP5o8Gj91kFxSGB0W+Eg==',''); -- PASS: MOVILPYME
INSERT INTO usuarios VALUES(1,1,1,1,1,1,'MOVILPYME','2015-10-15','2100-10-15','2015-10-15 12:00:00',0,0,'2015-10-15',0,0,0,'2015-10-15 12:00:00',0,0,0,0,0,0,0,'001');


------------------------------------------------------------------------
ALTER TABLE usuarios
ADD COLUMN NUM_EMPLEADO VARCHAR(30)  COMMENT 'IDENTIFICADOR INTERNO DE EMPLEADO';

INSERT INTO dispositivo_movil VALUES(1,1,1,'861284020787865','ZTE','ZTE','ZTE','ZTE',0);
INSERT INTO datos_usuario VALUES (2,'GESPRO','MOVIL','GESPRO','MANZANAS 54 SAN JOSE DF','1234567890','123','5512345678','hsolares@movilpyme.com');
INSERT INTO ldap VALUES(1,'GESPRO','6GpWUNdAg26lkRVDQK6uUw==',''); -- PASS: GESPRO
INSERT INTO usuarios VALUES(2,1,2,1,4,2,'GESPRO','2015-10-15','2100-10-15','2015-10-15 12:00:00',0,0,'2015-10-15',0,0,0,'2015-10-15 12:00:00',1,0,0,0,0,0,0,'A001');

---------------------------------------------------------------------------------------------
-- Leonardo, 26-10-2015
-- Tablas para el control de los conceptos, sus propiedades y la competencia.

CREATE TABLE concepto
(
   ID_CONCEPTO INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
   ID_EMPRESA INT(11) NOT NULL,
   NOMBRE varchar(100),
   DESCRIPCION text,
   PRECIO decimal(20,4),
   ID_ESTATUS int,
   IDENTIFICACION varchar(50),
   id_categoria int DEFAULT 0,
   ID_MARCA int,
   ID_SUBCATEGORIA int,
   ID_EMBALAJE int,
   ID_IMPUESTO int,
   PRECIO_COMPRA decimal(20,5) DEFAULT 0.00000,
   NUMERO_LOTE varchar(30),
   FECHA_CADUCIDAD date,
   NUM_ARTICULOS_DISPONIBLES double,
   GENERICO int DEFAULT 0,
   IMAGEN_CARPETA_ARCHIVO text,
   IMAGEN_NOMBRE_ARCHIVO text,
   DESCRIPCION_CORTA varchar(50) DEFAULT 'Sin descripcion',
   ID_ALMACEN int,
   STOCK_MINIMO double DEFAULT 1,
   STOCK_AVISO_MIN bit DEFAULT 0,
   DETALLE longtext,
   FECHA_ALTA timestamp,
   VOLUMEN double DEFAULT 0,
   PESO double DEFAULT 0,
   OBSERVACIONES longtext,
   PRECIO_DOCENA double DEFAULT 0,
   PRECIO_MAYOREO double DEFAULT 0,
   PRECIO_ESPECIAL double DEFAULT 0,
   IMPUESTO_X_CONCEPTO int DEFAULT 0,
   CLAVEART_SAE varchar(20),
   DESCUENTO_PORCENTAJE double DEFAULT 0,
   DESCUENTO_MONTO double DEFAULT 0,
   PRECIO_MEDIO_MAYOREO double DEFAULT 0,
   MAX_MENUDEO double DEFAULT 0,
   MIN_MEDIO_MAYOREO double DEFAULT 0,
   MAX_MEDIO_MAYOREO double DEFAULT 0,
   MIN_MAYOREO double DEFAULT 0,
   ID_SUBCATEGORIA2 int,
   ID_SUBCATEGORIA3 int,
   ID_SUBCATEGORIA4 int,
   PRECIO_MINIMO_VENTA double DEFAULT 0,
   NOMBRE_DESENCRIPTADO text,
   RUTA_IMAGEN longtext,
   RUTA_VIDEO longtext,
   CARACTERISTISCAS longtext,
   COMISION_PORCENTAJE double DEFAULT 0,
   COMISION_MONTO double DEFAULT 0,
   SINCRONIZACION_MICROSIP int DEFAULT 0,
   CLAVE varchar(50),
   DESGLOSE_PIEZAS double DEFAULT 1,
   FOLIO_CONCEPTO_MOVIL varchar(50),
   PRECIO_UNITARIO_GRANEL double DEFAULT 0,
   PRECIO_MEDIO_GRANEL double DEFAULT 0,
   PRECIO_MAYOREO_GRANEL double DEFAULT 0,
   PRECIO_ESPECIAL_GRANEL double DEFAULT 0
);

CREATE TABLE embalaje
(
   ID_EMBALAJE int PRIMARY KEY NOT NULL AUTO_INCREMENT,
   ID_EMPRESA int NOT NULL,
   ID_ESTATUS int NOT NULL,
   NOMBRE varchar(30),
   DESCRIPCION varchar(100)
);

CREATE TABLE RELACION_CONCEPTO_EMBALAJE(
    ID_RELACION INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_CONCEPTO INT(11),
    ID_EMBALAJE INT(11),
    CANTIDAD DOUBLE
);

CREATE TABLE marca
(
   ID_MARCA int PRIMARY KEY NOT NULL AUTO_INCREMENT,
   ID_EMPRESA int NOT NULL,
   ID_ESTATUS int NOT NULL,
   NOMBRE varchar(30),
   DESCRIPCION varchar(100)
);

CREATE TABLE categoria
(
   id_categoria int PRIMARY KEY NOT NULL AUTO_INCREMENT,
   nombre_categoria varchar(100) NOT NULL,
   descripcion_categoria varchar(250) DEFAULT 'Sin Descripcion',
   id_categoria_padre int,
   id_empresa int NOT NULL,
   ID_ESTATUS int DEFAULT 1 NOT NULL
);

CREATE TABLE COMPETENCIA(
    ID_COMPETENCIA INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT(11) NOT NULL,
    ID_ESTATUS INT(11),
    NOMBRE VARCHAR(150),
    DESCRIPCION VARCHAR(500)    
);

CREATE TABLE RELACION_CONCEPTO_COMPETENCIA(
    ID_RELACION INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_CONCEPTO INT(11),
    ID_COMPETENCIA INT(11),
    NOMBRE_CONCEPTO_COMPETENCIA VARCHAR(100),
    DESCRIPCION VARCHAR(350),
    CANTIDAD DOUBLE,
    PRECIO decimal(20,4),
    PRECIO_COMPRA decimal(20,5) DEFAULT 0.00000,
    PRECIO_DOCENA double DEFAULT 0,
    PRECIO_MAYOREO double DEFAULT 0,
    PRECIO_ESPECIAL double DEFAULT 0,
    PRECIO_MINIMO_VENTA double DEFAULT 0,
    PRECIO_MEDIO_MAYOREO double DEFAULT 0,
    MAX_MENUDEO double DEFAULT 0,
    MIN_MEDIO_MAYOREO double DEFAULT 0,
    MAX_MEDIO_MAYOREO double DEFAULT 0,
    MIN_MAYOREO double DEFAULT 0,
    DESCUENTO_PORCENTAJE double DEFAULT 0,
    DESCUENTO_MONTO double DEFAULT 0
);

CREATE TABLE existencia_almacen
(
   ID_ALMACEN int NOT NULL AUTO_INCREMENT,
   ID_CONCEPTO int NOT NULL,
   EXISTENCIA double DEFAULT 0,
   ESTATUS int,
   PRIMARY KEY (ID_ALMACEN,ID_CONCEPTO)
);

-- Restablecimiento de password si ya se logueo o no.
alter table ldap
add column FIRMADO int default 1;

-- licencias 
ALTER TABLE empresa_permiso_aplicacion
ADD COLUMN MAX_NUM_USUARIOS INT DEFAULT 0;

ALTER TABLE dispositivo_movil
ADD COLUMN ASIGNADO INT DEFAULT 0;


--  Tipo dato cliente
ALTER TABLE CLIENTE
MODIFY LATITUD DOUBLE DEFAULT 0,
MODIFY LONGITUD DOUBLE DEFAULT 0;

-- Tabla HORARIOS
CREATE TABLE horario_usuario(
ID_HORARIO INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
NOMBRE_HORARIO VARCHAR (30) COMMENT 'ALIAS HORARIO',
ID_EMPRESA INT(11) NOT NULL,
ID_ESTATUS INT (2)DEFAULT 1 COMMENT '1-ACTIVO , 2- INACTIVO'
);
-- Tabla detalle HORARIOS
CREATE TABLE detalle_horario(
ID_DETALLE_HORARIO INT PRIMARY KEY NOT NULL  AUTO_INCREMENT,
ID_HORARIO INT NOT NULL,
DIA VARCHAR (15) COMMENT 'LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO',
HORA_ENTRADA TIME,
HORA_SALIDA TIME,
DIA_DESCANSO  INT(2) DEFAULT 0 COMMENT 'SI ES DIA DESCANSO = 1, NO ES DESCANSO = 0',
COMIDA_SALIDA TIME,
COMIDA_ENTRADA TIME,
PERIODO_COMIDA INT DEFAULT 0 COMMENT 'EXPRESADA EN MINUTOS',
TOLERANCIA INT DEFAULT 0 COMMENT 'EXPRESADA EN MINUTOS'
);

-- RELACION CON USUARIOS
ALTER TABLE USUARIOS
ADD COLUMN ID_HORARIO_ASIGNADO INT DEFAULT 0 COMMENT 'HORARIO ASIGNADO AL USUARIO';

-- CHECKS IN

CREATE TABLE registro_checkin(
ID_CHECK BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
ID_USUARIO INT NOT NULL,
ID_CLIENTE INT NOT NULL,
FECHA_HORA DATETIME,
ID_TIPO_CHECK INT DEFAULT 0 COMMENT '1 - ENTRADA 2 - SALIDA ',
ID_DETALLE_CHECK INT DEFAULT 0 COMMENT ' 0 Sin detalle, 1 Comida, 2 Descanso, 3 Permiso, 4 Fin de jornada, 5 Otro, 6 - inicio de jornada, 7- Cambio de cliente ,8 - Baño , 9 - Traslado ',
COMENTARIOS VARCHAR(200),
LATITUD DOUBLE DEFAULT 0,
LONGITUD DOUBLE DEFAULT 0,
ID_ESTATUS INT DEFAULT 1 COMMENT '1 Activo, 2 Inactivo'
);

-- TABLA PARA EL CONTROL DE 
CREATE TABLE CONCEPTO_REGISTRO_FOTOGRAFICO (
    ID_REGISTRO INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_EMPRESA INT(11) NOT NULL,
    ID_CONCEPTO INT(11) NOT NULL COMMENT 'ID DE LA FOTO QUE SE RELACIONA A LA FOTO',
    ID_CLIENTE INT(11) DEFAULT 0 COMMENT 'ID DEL CLIENTE AL QUE SE LE TOMO LA FOTO',
    ID_USUARIO INT(11) DEFAULT 0 COMMENT 'ID DEL USUARIO QUE TOMO LA FOTO',
    ID_TIPO_FOTO INT(2) COMMENT '1 PLANOGRAMA DE ENTRADA, 2 PLANOGRAMA DE SALIDA, 3 POP(MATERIAL PROMOCIONAL), 4 COMPETENCIA, 5 GIVE WAYS(PREMIOS)',
    ID_ESTATUS INT(1) COMMENT '1 ACTIVO, 2 INACTIVO',
    NOMBRE_FOTO VARCHAR(150) DEFAULT '' COMMENT 'NOMBRE DE LA FOTOGRAFIA CARGADA',
    COMENTARIO VARCHAR(250) DEFAULT '',
    FECHA_HORA DATETIME COMMENT 'FECHA Y HORA EN LA QUE SE DIO DE ALTA LA FOTO'
);

--Tabla solicitada por Roberto para la degustacion:
CREATE TABLE DEGUSTACION(
    ID_DEGUSTACION INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_USUARIO INT(11),
    ID_EMPRESA INT(11),
    ID_CONCEPTO INT(11),
    ID_CLIENTE INT(11),
    ID_CHECK INT(11),
    ID_ESTATUS INT(1) COMMENT '1 ACTIVO, 2 INACTIVO, 3 CERRADO',
    CANTIDAD DOUBLE,
    CANTIDAD_CIERRE DOUBLE,
    COMENTARIOS_CIERRE TEXT,
    FECHA_APERTURA DATETIME,
    FECHA_CIERRE DATETIME
);
 
CREATE TABLE estado_empleado (
    ID_ESTADO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(20),
    APLICABLE VARCHAR(45),
    DESCRIPCION VARCHAR(300)
);

CREATE TABLE prospecto(
    ID_PROSPECTO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ID_EMPRESA INT ,
    RAZON_SOCIAL VARCHAR(500),
    LADA VARCHAR (8),
    TELEFONO VARCHAR(20),
    CELULAR VARCHAR(14),
    CORREO VARCHAR(100),
    CONTACTO VARCHAR(100),
    ID_ESTATUS INT,
    DESCRIPCION TEXT,
    LATITUD DOUBLE DEFAULT 0,
    LONGITUD DOUBLE DEFAULT 0,
    DIRECCION VARCHAR(500),
    NOMBRE_IMAGEN_PROSPECTO VARCHAR(200),
    ID_USUARIO_VENDEDOR INT,
    FECHA_REGISTRO DATETIME,
    DIR_NUMERO_EXTERIOR VARCHAR(50),
    DIR_NUMERO_INTERIOR VARCHAR(50),
    DIR_CODIGO_POSTAL VARCHAR(8),
    DIR_COLONIA VARCHAR(100)
);


--TABLA PARA LA ESTANTERIA, 30-10-2015, Leonardo
CREATE TABLE ESTANTERIA(
    ID_ESTANTERIA INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_EMPRESA INT(11),
    ID_ESTATUS INT(2),
    ID_CLIENTE INT(11),
    ID_CONCEPTO INT(11) COMMENT 'ID DEL CONCEPTO QUE SE TRATA EN QUESTION',
    ID_USUARIO INT(11) COMMENT 'ID DEL USUARIO QUE LO DIO DE ALTA',    
    CANTIDAD DOUBLE COMMENT 'CANTIDAD DEL CONCEPTO PROPIO EN LA ESTANTERIA',
    PRECIO DOUBLE COMMENT 'PRECIO DEL CONCEPTO PROPIO EN LA ESTANTERIA',
    FECHA DATE
);
-- TABLA QUE MANEJA EL CONTROL DE LOS REGISTROS EN CIERTA ESTANTERIA.
CREATE TABLE ESTANTERIA_DESCRIPCION(
    ID_DESCRIPCION INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_ESTANTERIA INT(11) COMMENT 'ID DE LA TABLA ESTANTERIA A LA CUAL SE RELACIONA ESTA DESCRIPCION',
    ID_COMPETENCIA INT(11) COMMENT 'ID DE LA COMPETENCIA',
    ID_ESTATUS INT(2),
    CANTIDAD DOUBLE COMMENT 'CANTIDAD DE PRODUCTOS DE LA COMPETENCIA EN QUESTION EN LA ESTANTERIA',
    PRECIO DOUBLE COMMENT 'PRECIO DE LA COMPETENCIA'
);


-- seguimiento

CREATE TABLE pos_movil_estatus (
	ID_MOVIL_ESTATUS INT NOT NULL PRIMARY KEY ,
	ID_EMPRESA INT,
	ID_EMPLEADO INT,
	FECHA_ESTATUS DATETIME,
	MENSAJE_ESTATUS VARCHAR(150),
	LATITUD DOUBLE DEFAULT 0,
	LONGITUD DOUBLE DEFAULT 0
);

CREATE TABLE pos_movil_estatus_parametros(
	ID_ESTATUS_PARAMETRO INT NOT NULL PRIMARY KEY ,
	ID_EMPRESA INT,
	ID_EMPLEADO INT,	
	TIEMPO_MINUTOS_ACTUALIZA INT DEFAULT 30,
        IMAGEN_SEGUIMIENTO VARCHAR(200)
);


-- Estados empleado
-- 0 (CERO)-- SIN DETALLE
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('1','COMIDA','1','COMIDA');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('2','DESCANSO','1','DESCANSO');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('3','PERMISO','1','PERMISO');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('4','FIN DE JORNADA','1','FIN DE JORNADA');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('5','OTRO','1','OTRO');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('6','INICIO DE JORNADA','1','INICIO DE JORNADA');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('7','DEGUSTACION','1','DEGUSTACION');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('8','FIN DE DEGUSTACION','1','FIN DE DEGUSTACION');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('9','TRABAJANDO','1','TRABAJANDO');
insert into estado_empleado (ID_ESTADO, NOMBRE, APLICABLE, DESCRIPCION) values('10','INACTIVO','1','INACTIVO');


-- Campo adicional estatus empleado
ALTER TABLE usuarios
ADD COLUMN ID_ESTADO_EMPLEADO INT NOT NULL DEFAULT 0 COMMENT 'ESTADO ACTUAL DEL EMPLEADO';


ALTER TABLE usuarios
ADD COLUMN MINUTOS_ESTATUS INT NOT NULL DEFAULT 0 COMMENT 'SOLICITAR ESTATUS CADA N MINUTOS';

--CAMPOS ADICIONALES PARA LA ESTANTERIA Y SU DESCRIPCION DE ESTANTERIA
ALTER TABLE ESTANTERIA
ADD COLUMN NOMBRE_EMBALAJE VARCHAR(150) DEFAULT '' COMMENT 'NOMBRE DEL EMBALAJE QUE ESTA RELACIONADO AL PRODUCTO PROPIO';

ALTER TABLE ESTANTERIA_DESCRIPCION
ADD COLUMN NOMBRE_EMBALAJE VARCHAR(150) DEFAULT '' COMMENT 'NOMBRE DEL EMBALAJE QUE ESTA RELACIONADO AL PRODUCTO DE LA COMPETENCIA';

ALTER TABLE ESTANTERIA
ADD COLUMN FECHA_CADUCIDAD DATE DEFAULT NULL COMMENT 'FECHA DE CADUCIDAD DEL PRODUCTO PROPIO';

ALTER TABLE ESTANTERIA_DESCRIPCION
ADD COLUMN FECHA_CADUCIDAD DATE DEFAULT NULL COMMENT 'FECHA DE CADUCIDAD DEL PRODUCTO DE LA COMPETENCIA';


-- Img seguimiento
ALTER TABLE pos_movil_estatus
ADD COLUMN IMAGEN_SEGUIMIENTO VARCHAR(200);

ALTER TABLE pos_movil_estatus
CHANGE ID_MOVIL_ESTATUS ID_MOVIL_ESTATUS INT(11) NOT NULL AUTO_INCREMENT;

---------TABLAS PARA EL PEDIDO:
CREATE TABLE sgfens_pedido
(
   ID_PEDIDO int PRIMARY KEY NOT NULL AUTO_INCREMENT,
   ID_USUARIO_VENDEDOR int NOT NULL,
   ID_EMPRESA int NOT NULL,
   ID_CLIENTE int NOT NULL,
   ID_TIPO_PEDIDO INT COMMENT '1 FALTANTE CLIENTE, 2 DEGUSTACION, 3 REGISTRO DE VENTA',
   CONSECUTIVO_PEDIDO int NOT NULL,
   FOLIO_PEDIDO varchar(30),
   FECHA_PEDIDO timestamp NOT NULL,
   TIPO_MONEDA varchar(10) NOT NULL,
   TIEMPO_ENTREGA_DIAS int DEFAULT 0 NOT NULL,
   COMENTARIOS longtext,
   DESCUENTO_TASA double DEFAULT 0 NOT NULL,
   DESCUENTO_MONTO double DEFAULT 0 NOT NULL,
   SUBTOTAL double NOT NULL,
   TOTAL double NOT NULL,
   DESCUENTO_MOTIVO varchar(200),
   FECHA_ENTREGA timestamp NOT NULL,
   FECHA_TENTATIVA_PAGO timestamp NOT NULL,
   SALDO_PAGADO double DEFAULT 0 NOT NULL,
   ADELANTO double DEFAULT 0 NOT NULL,
   ID_COMPROBANTE_FISCAL int DEFAULT 0,
   ID_ESTATUS_PEDIDO smallint DEFAULT 1,
   LATITUD double DEFAULT 0 NOT NULL,
   LONGITUD double DEFAULT 0 NOT NULL,
   FOLIO_PEDIDO_MOVIL varchar(30),
   NOMBRE_IMAGEN_FIRMA varchar(250),
   IS_MODIFICADO_CONSOLA smallint DEFAULT 0 NOT NULL,
   BONIFICACION_DEVOLUCION double DEFAULT 0,
   ID_USUARIO_CONDUCTOR_ASIGNADO int DEFAULT 0,
   ID_USUARIO_VENDEDOR_ASIGNADO int DEFAULT 0,
   ID_USUARIO_VENDEDOR_REASIGNADO int DEFAULT 0,
   FECHA_LIMITE_REASIGANCION date,
   SINCRONIZACION_MICROSIP int DEFAULT 0,
   CONSIGNA int DEFAULT 0,
   ID_VIA_EMBARQUE int DEFAULT 0
);

CREATE TABLE sgfens_pedido_devolucion_cambio
(
   ID_PEDIDO_DEVOL_CAMBIO int PRIMARY KEY NOT NULL AUTO_INCREMENT,
   ID_ESTATUS int DEFAULT 1,
   ID_EMPRESA int,
   ID_EMPLEADO int,
   ID_CONCEPTO int,
   ID_PEDIDO int,
   ID_TIPO int,
   APTO_PARA_VENTA double,
   NO_APTO_PARA_VENTA double,
   ID_CLASIFICACION int,
   DESCRIPCION_CLASIFICACION varchar(250),
   ID_CONCEPTO_ENTREGADO int,
   MONTO_RESULTANTE double,
   DIFERENCIA_FAVOR int,
   FECHA timestamp,
   FOLIO_MOVIL varchar(50),
   CANTIDAD_DEVUELTA DOUBLE DEFAULT 0 COMMENT 'CAMPO PARA INDICAR LA CANTIDAD DEVUELTA DEL CONCEPTO'
);

CREATE TABLE sgfens_estatus_pedido
(
   ID_ESTATUS_PEDIDO int PRIMARY KEY NOT NULL AUTO_INCREMENT,
   NOMBRE varchar(50) NOT NULL,
   DESCRIPCION varchar(250) DEFAULT 'Sin descripcion'
);
INSERT INTO sgfens_estatus_pedido (ID_ESTATUS_PEDIDO,NOMBRE,DESCRIPCION) VALUES (1,'PENDIENTE','Pendiente por Entregar');
INSERT INTO sgfens_estatus_pedido (ID_ESTATUS_PEDIDO,NOMBRE,DESCRIPCION) VALUES (2,'ENTREGADO','Entregado al Cliente');
INSERT INTO sgfens_estatus_pedido (ID_ESTATUS_PEDIDO,NOMBRE,DESCRIPCION) VALUES (3,'CANCELADO','Cancelado');
INSERT INTO sgfens_estatus_pedido (ID_ESTATUS_PEDIDO,NOMBRE,DESCRIPCION) VALUES (4,'ENTREGADO PARCIAL','Pedido entregado Parcialmente');
CREATE TABLE sgfens_pedido_impuesto
(
   ID_PEDIDO int NOT NULL,
   ID_IMPUESTO int NOT NULL,
   PRIMARY KEY (ID_PEDIDO,ID_IMPUESTO)
)
;
CREATE TABLE sgfens_pedido_producto
(
   ID_PEDIDO int NOT NULL,
   ID_CONCEPTO int NOT NULL,
   DESCRIPCION longtext NOT NULL,
   UNIDAD varchar(100) DEFAULT 'No Aplica' NOT NULL,
   IDENTIFICACION varchar(50),
   CANTIDAD double NOT NULL,
   PRECIO_UNITARIO double NOT NULL,
   DESCUENTO_PORCENTAJE double DEFAULT 0,
   DESCUENTO_MONTO double DEFAULT 0,
   SUBTOTAL double NOT NULL,
   COSTO_UNITARIO double DEFAULT 0,
   PORCENTAJE_COMISION_EMPLEADO double DEFAULT 0,
   CANTIDAD_ENTREGADA double DEFAULT 0,
   FECHA_ENTREGA timestamp,
   ESTATUS smallint DEFAULT 0,
   id_Almacen_Origen int DEFAULT 0,
   PRIMARY KEY (ID_PEDIDO,ID_CONCEPTO)
);

CREATE TABLE venta_metodo_pago
(
   ID_VENTA_METODO_PAGO int PRIMARY KEY NOT NULL,
   NOMBRE_METODO_PAGO varchar(50) NOT NULL,
   DESCRIPCION_METODO_PAGO text NOT NULL
);
INSERT INTO venta_metodo_pago (ID_VENTA_METODO_PAGO,NOMBRE_METODO_PAGO,DESCRIPCION_METODO_PAGO) VALUES (1,'Tarjeta Cr','Tarjeta de Cr');
INSERT INTO venta_metodo_pago (ID_VENTA_METODO_PAGO,NOMBRE_METODO_PAGO,DESCRIPCION_METODO_PAGO) VALUES (2,'Efectivo','Pago en Efectivo');
INSERT INTO venta_metodo_pago (ID_VENTA_METODO_PAGO,NOMBRE_METODO_PAGO,DESCRIPCION_METODO_PAGO) VALUES (3,'Documento (Cheque/Vale)','Pago con documento, Cheque o Vale');
INSERT INTO venta_metodo_pago (ID_VENTA_METODO_PAGO,NOMBRE_METODO_PAGO,DESCRIPCION_METODO_PAGO) VALUES (4,'Cr','Pago a credito');

ALTER TABLE estanteria_descripcion
ADD COLUMN ID_RELACION_CONCEPTO_COMPETENCIA INT(11) DEFAULT 0;

-- Héctor campo Incidencia
ALTER TABLE registro_checkin
ADD COLUMN INCIDENCIA INT DEFAULT 0 COMMENT '0-SIN COMENTARIO, 1- RFETARDO , 2 - FALTA';

--IDENTIFICADOR ADICIONAL PARA SABER QUE EL TIPO DE PEDIDO IGUAL A 4 SE TRATA DE UNA DEVOLUCION:
ALTER TABLE SGFENS_PEDIDO CHANGE ID_TIPO_PEDIDO ID_TIPO_PEDIDO INT COMMENT '1 FALTANTE CLIENTE, 2 DEGUSTACION, 3 REGISTRO DE VENTA, 4 DEVOLUCION';

ALTER TABLE sgfens_pedido_producto 
ADD COLUMN APTO_PARA_VENTA DOUBLE COMMENT 'DE LA CANTIDAD CUANTOS SON APTOS PARA VENTA',
ADD COLUMN NO_APTO_PARA_VENTA DOUBLE COMMENT 'DE LA CANTIDAD CUANTOS NO SON APTOS PARA VENTA',
ADD COLUMN ID_CLASIFICACION INT(1) COMMENT '1 NO SE VENDIO, 2 EMPAQUE DAÑADO, 3 PRODUCTO DAÑADO, 4 CADUCIDAD VENCIDA, 5 OTRO',
ADD COLUMN COMENTARIOS TEXT COMMENT 'DESCRIPCION DEL MOTIVO DE DEVOLUCION';


-- Hector
-- Vista para saber los productos vendidos durante una degustacion
CREATE VIEW productosVendidos
AS
SELECT ID_PEDIDO,ID_CONCEPTO,DESCRIPCION,UNIDAD,IDENTIFICACION,SUM(CANTIDAD) AS CANTIDAD,PRECIO_UNITARIO,DESCUENTO_PORCENTAJE,DESCUENTO_MONTO,SUM(SUBTOTAL) AS SUBTOTAL,COSTO_UNITARIO,PORCENTAJE_COMISION_EMPLEADO,SUM(CANTIDAD_ENTREGADA) AS CANTIDAD_ENTREGADA ,FECHA_ENTREGA,ESTATUS,id_Almacen_Origen,SUM(APTO_PARA_VENTA) AS APTO_PARA_VENTA,SUM(NO_APTO_PARA_VENTA) AS NO_APTO_PARA_VENTA,ID_CLASIFICACION,COMENTARIOS
FROM sgfens_pedido_producto
GROUP BY ID_CONCEPTO;


-- Héctor 
-- Tablas para modulo de encuestas
CREATE TABLE ENCUESTA (
ID_ENCUESTA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
FECHA_REGISTRO DATETIME,
NOMBRE VARCHAR(200),
DESCRIPCION VARCHAR(500),
ID_ESTATUS INT DEFAULT 1 COMMENT '1 - ACTIVO , 2 - INACTIVO'
);

CREATE TABLE ENCUESTA_PREGUNTAS(
ID_ENCUESTA_PREGUNTAS INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
ID_ENCUESTA INT NOT NULL,
PREGUNTA VARCHAR(500),
TIPO_PREGUNTA INT DEFAULT 0 COMMENT '1 - ABIERTA , 2 - OPCION MULTIPLE',
ID_ESTATUS INT DEFAULT 1 COMMENT '1 - ACTIVO , 2 - INACTIVO'
);


CREATE TABLE ENCUESTA_DETALLE_OPCIONES(
ID_ENCUESTA_DETALLE_OPCIONES INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
ID_ENCUESTA_PREGUNTAS INT NOT NULL,
IDENTIFICADOR VARCHAR(10) COMMENT 'EJEMPLO : A) , 1) ... ETC',
RESPUESTA VARCHAR(500) COMMENT 'TEXTO DE RESPUESTA CERRADA',
ID_ESTATUS INT DEFAULT 1 COMMENT '1 - ACTIVO , 2 - INACTIVO'
);



CREATE TABLE ENCUESTA_APLICADA(
ENCUESTA_APLICADA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
ID_ENCUESTA_PREGUNTAS INT NOT NULL,
ID_USUARIO INT NOT NULL COMMENT 'ID DEL USUARIO QUE APLICO LA ENCUESTA', 
ID_CLIENTE INT NOT NULL COMMENT 'ID DEL CLIENTE AL QUE SE LE APLICO LA ENCUESTA',
RESPUESTA VARCHAR (500) COMMENT 'CAMPO PARA RESPUESTAS ABIERTAS',
ID_ENCUESTA_DETALLE_OPCIONES INT DEFAULT 0 COMMENT 'CAMPO PARA RESPUESTAS DE OPCION MULTIPLE RELACION ENCUESTA_DETALLE_OPCIONES',
ID_ESTATUS INT DEFAULT 1 COMMENT '1 - ACTIVO , 2 - INACTIVO'
);


-- relacion encuesta - usuario   ( n:n )
CREATE TABLE relacion_encuesta_usuario(
	ID_USUARIOS INT NOT NULL,
	ID_ENCUESTA INT NOT NULL
);



INSERT INTO estado_empleado
VALUES (11,'CAMBIO DE TIENDA',1,'CAMBIO DE TIENDA'),
(12,'BAÑO',1,'BAÑO'),
(13,'TRASLADO',1,'TRASLADO'),
(14,'RETARDO',1,'RETARDO'),
(15,'FALTA',1,'FALTA'),
(16,'SALIDA TEMPRANA',1,'SALIDA TEMPRANA')
;

-- Leonardo 04-02-2016
-- Tablas para el catalogo de zonas horarias y para el control de la empresa que lo ha activado
CREATE TABLE ZONA_HORARIA_CATALOGO(
    ID_ZONA_HORARIA_CATALOGO INT NOT NULL AUTO_INCREMENT,
    ID_ESTATUS INT NOT NULL DEFAULT '1' COMMENT '1 ACTIVO, 2 DESACTIVADO',
    ZONA_HORARIA VARCHAR(300),
    PRIMARY KEY (ID_ZONA_HORARIA_CATALOGO)
);

CREATE TABLE ZONA_HORARIA(
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE LA TABLA DE EMPRESA QUE TIENE CREADA SU ZONA HORARIA, PUEDE SER SUCURSAL O MATRIZ',
    ID_ZONA_HORARIA_CATALOGO INT NOT NULL COMMENT 'ID DE LA TABLA ZONA_HORARIA_CATALOGO',   
    FECHA DATETIME COMMENT 'FECHA Y HORA LOCAL MEXICO EN LA QUE SE DA DE ALTA LA ZONA HORARIA',
    PRIMARY KEY (ID_EMPRESA)
);

INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Mexico_City');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Argentina/Cordoba');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Chicago');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Lima');--PERU
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Santiago');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Puerto_Rico');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('Europe/Berlin');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('Europe/Paris');

CREATE TABLE ZONA_HORARIA_LOG(
    ID_ZONA_HORARIA_LOG INT NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE LA EMPRESA A LA QUE LE CAMBIARON LA ZONA HORARIA',
    ID_USUARIOS INT NOT NULL COMMENT 'ID DEL USUARIO QUE REALIZA EL AJUSTE DE LA ZONA HORARIA',
    DESCRIPCION VARCHAR(500) DEFAULT '' COMMENT 'DESCRIPCION DE QUE AJUSTE SE REALIZO',
    FECHA DATETIME COMMENT 'FECHA Y HORA LOCAL MEXICO EN LA QUE SE REALIZA EL AJUSTE DE LA ZONA HORARIA',
    PRIMARY KEY (ID_ZONA_HORARIA_LOG)
);

-- Leonardo, 09-03-2016, copia del preto, realizada por Héctor
-- Para el negocio de carga masiva en excel
CREATE TABLE CARGA_XLS(
ID_CARGA INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'IDENTIFICADOR',
ID_TIPO_CARGA INT NOT NULL DEFAULT 0 COMMENT 'IDENTIFICADOR TIPO CARGA 1- CONCEPTOS , 2-CLIENTES',
ID_EMPRESA INT NOT NULL COMMENT 'ID EMPRESA LLAVE FORANEA',
ID_USUARIO INT NOT NULL COMMENT 'USUARIO QUE SUBE EL ARCHIVO',
FECHA DATETIME COMMENT 'FECHA Y HORA EN QUE SE SUBIO EL ARCHIVO',
NOMBRE_ARCHIVO VARCHAR(200) COMMENT 'NOMBRE DEL ARCHIVO SUBIDO',
ID_ESTATUS_CARGA INT COMMENT '1- CARGA COMPLETA, 2- CARGA INCOMPLETA (CON ERRORES), 3- OTRO',
LOG_TEXT VARCHAR(5000) DEFAULT '' COMMENT 'ALMACENA LOS ERRORES ARROJADOS DURANTE LA CARGA DEL ARCHIVO'
);

-- Leonardo, 10-03-2016, 
-- Quitamos la llave para que podamos tener una relacion mushos a muchos
alter table relacion_cliente_vendedor drop primary key;
ALTER TABLE relacion_cliente_vendedor 
ADD COLUMN FECHA_ASIGNACION DATE DEFAULT NULL;

-- Leonardo, 14-03-2016,
-- Porcentaje de pila restante de moviles 
ALTER TABLE dispositivo_movil 
    ADD COLUMN PCT_PILA DOUBLE DEFAULT '-1' NULL COMMENT 'PORCENTAJE DE PILA ENVIADO DESDE EL MOVIL';

-- Cesar, 20-04-2016
-- Recreación de tablas para Rutas y Logistica
DROP TABLE `tipo_ruta`;
DROP TABLE `ruta`;
DROP TABLE `ruta_marcador`;

--Rutas
CREATE TABLE tipo_ruta (
	ID_TIPO_RUTA INT PRIMARY key not null AUTO_INCREMENT,
	TIPO_RUTA VARCHAR (135)
);

INSERT INTO tipo_ruta (ID_TIPO_RUTA, TIPO_RUTA) VALUES('1','Ruta Libre');
INSERT INTO tipo_ruta (ID_TIPO_RUTA, TIPO_RUTA) VALUES('2','Ruta por clientes');
INSERT INTO tipo_ruta (ID_TIPO_RUTA, TIPO_RUTA) VALUES('3','Ruta por prospectos');
INSERT INTO tipo_ruta (ID_TIPO_RUTA, TIPO_RUTA) VALUES('4','Ruta por clientes asignados');
-- INSERT INTO tipo_ruta (ID_TIPO_RUTA, TIPO_RUTA) VALUES('5','Ruta por Cobranza');


CREATE TABLE `ruta` (                                                                                                                   
          `ID_RUTA` INT(11) NOT NULL AUTO_INCREMENT,                                                                                            
          `ID_TIPO_RUTA` INT(11) NOT NULL,                                                                                                      
          `ID_USUARIO` INT(11) DEFAULT NULL,                                                                                                   
          `NOMBRE_RUTA` VARCHAR(100) NOT NULL,                                                                                                  
          `COMENTARIO_RUTA` TEXT,                                                                                                               
          `FH_REG_RUTA` DATETIME NOT NULL,                                                                                                      
          `FH_MODIFICA_RUTA` DATETIME DEFAULT NULL COMMENT 'FECHA DE CUANDO SE MODIFICA UNA RUTA',                                              
          `RECORRIDO_RUTA` MEDIUMTEXT NOT NULL,                                                                                                 
          `PARADAS_RUTA` INT(11) NOT NULL DEFAULT '0',                                                                                          
          `ID_EMPRESA` BIGINT(20) NOT NULL,                                                                                                     
          `DIAS_SEMANA_RUTA` VARCHAR(100) DEFAULT NULL COMMENT 'Dias de la semana que se usara dicha ruta en caso de asignarla a un empleado',  
          PRIMARY KEY (`ID_RUTA`)                                                                                                               
        );

CREATE TABLE `ruta_marcador` (                                                                                                                                                      
            `ID_RUTA_MARCADOR` INT(11) NOT NULL AUTO_INCREMENT,                                                                                                                               
            `ID_RUTA` INT(11) NOT NULL,                                                                                                                                                       
            `INFORMACION_MARCADOR` TEXT,                                                                                                                                                      
            `LATITUD_MARCADOR` VARCHAR(50) NOT NULL,                                                                                                                                          
            `LONGITUD_MARCADOR` VARCHAR(50) NOT NULL,                                                                                                                                         
            `ID_PROSPECTO` INT(11) DEFAULT NULL,                                                                                                                                              
            `ID_CLIENTE` INT(11) DEFAULT NULL,                                                                                                                                                
            `IS_VISITADO` TINYINT(4) NOT NULL DEFAULT '0' COMMENT 'INDICA SI EL PUNTO O MARCADOR EN LA RUTA YA FUE MARCADO COMO VISITADO',                                                    
            `DISTANCIA_PUNTO` DOUBLE DEFAULT '0' COMMENT 'ATRIBUTO PARA EFICIENTAR LAS RUTAS, SOLO ES PARA USO DE NEGOCIO EN EL CODIGO, ESTA DATO SIEMPRE DEBERA SER CERO EN BASE DE DATOS',  
            PRIMARY KEY (`ID_RUTA_MARCADOR`)                                                                                                                                                  
          );

--Roberto, 20-06-16
--Se cambia la longitud del campo de mensaje en estatus a 160
ALTER TABLE POS_MOVIL_ESTATUS MODIFY MENSAJE_ESTATUS VARCHAR(160) NOT NULL;=======
    ADD COLUMN PCT_PILA DOUBLE DEFAULT '-1' NULL COMMENT 'PORCENTAJE DE PILA ENVIADO DESDE EL MOVIL';

--José López, 21-09-16
--Se agregan campos de unidades almacen y precio de oferta para estanteria.
ALTER TABLE estanteria ADD COLUMN UNIDADES_ALMACEN DOUBLE COMMENT 'UNIDADES EXISTENTES EN ALMACEN';
ALTER TABLE estanteria ADD COLUMN PRECIO_OFERTA DOUBLE COMMENT 'PRECIO OFERTA MOSTRADO EN ESTANTERIA';
ALTER TABLE estanteria_descripcion ADD COLUMN UNIDADES_ALMACEN DOUBLE COMMENT 'UNIDADES EXISTENTES EN ALMACEN(COMPETENCIA)';
ALTER TABLE estanteria_descripcion ADD COLUMN PRECIO_OFERTA DOUBLE COMMENT 'PRECIO OFERTA MOSTRADO EN ESTANTERIA(COMPETENCIA)';

--José López 29-09-16
--se agrega tabla para asignar prospectos a vendedores
CREATE TABLE relacion_prospecto_vendedor (
  ID_PROSPECTO INT(11) NOT NULL PRIMARY KEY COMMENT 'ID DEL PROSPECTO',
  ID_USUARIO INT(11) NOT NULL COMMENT 'ID del usuario al que pertenece el prospecto',
  FECHA_ASIGNACION DATE DEFAULT NULL,
  FOREIGN KEY (ID_USUARIO) REFERENCES usuarios (ID_USUARIOS)
);

